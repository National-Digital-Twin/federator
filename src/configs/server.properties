# SPDX-License-Identifier: Apache-2.0
# Originally developed by Telicent Ltd.; subsequently adapted, enhanced, and maintained by the National Digital Twin Programme.

# Copyright (c) Telicent Ltd.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Modifications made by the National Digital Twin Programme (NDTP)
# © Crown Copyright 2025. This work has been developed by the National Digital Twin Programme
# and is legally attributed to the Department for Business and Trade (UK) as the governing entity.

kafka.bootstrapServers=localhost:19093
kafka.defaultKeyDeserializerClass=org.apache.kafka.common.serialization.StringDeserializer
kafka.defaultValueDeserializerClass=uk.gov.dbt.ndtp.federator.access.AccessMessageDeserializer
kafka.consumerGroup=server.consumer
kafka.pollDuration=PT10S
kafka.pollRecords=100
## Decides which kafka headers are shared. This is a '^' separated list
shared.headers=Security-Label^Content-Type
## share all data default is false
filter.shareAll=false
server.port=8080
# Default server.mtlsEnabled for the GRPc server is false
server.mtlsEnabled=false
## If server.mtlsEnabled is set then you need set the file path to the cert chain file
server.p12FilePath=
server.p12Password=
server.truststoreFilePath=
server.truststorePassword=
## Default server.keepAliveTime for the GRPC server is 5 secs
server.keepAliveTime=10
## Default server.keepAliveTimeout for the GRPC server is 1 sec
#server.keepAliveTimeout=
# Note any changes to the file below should also be replicated withing the docker configuration file (access.json)
server.accessMapValueFile=src/configs/access.json
common.configuration=src/configs/common-configuration.properties

# ============================================
# Federator Configuration
# ============================================

# Producer ID for federator
federator.producer.id=${FEDERATOR_PRODUCER_ID}

# ============================================
# Management Node Configuration
# ============================================

# Base URL for the management node
management.node.base.url=${MANAGEMENT_NODE_BASE_URL}

# Request timeout in seconds for management node connections
management.node.request.timeout=${MANAGEMENT_NODE_REQUEST_TIMEOUT}

# ============================================
# Cache Configuration
# ============================================

# Cache time-to-live in seconds
management.node.cache.ttl.seconds=${MANAGEMENT_NODE_CACHE_TTL_SECONDS}


# ============================================
# Management Node API Endpoints
# ============================================

# Producer configuration endpoint
management.node.api.endpoints.producer=${MANAGEMENT_NODE_API_PRODUCER_ENDPOINT}