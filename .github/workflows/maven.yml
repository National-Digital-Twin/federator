# SPDX-License-Identifier: Apache-2.0
# Â© Crown Copyright 2025. This work has been developed by the National Digital Twin Programme
# and is legally attributed to the Department for Business and Trade (UK) as the governing entity.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Automated tests

on:
  push:
    branches:
      - 'develop'
      - 'main'
  pull_request:
    branches:
      - 'develop'
      - 'main'
  workflow_call:

env:
  MAVEN_CLI_OPTS: "--batch-mode --no-transfer-progress --settings .m2/settings.xml"

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: openjdk:17
    steps:
      - uses: actions/checkout@v4
      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build and Test
        run: >
          ./mvnw $MAVEN_CLI_OPTS verify -DskipTestcontainers=true
          -Dkafka.bootstrapServers=example.com:9092
          -Dkafka.consumerGroup=example
          -Dkafka.sender.defaultKeySerializerClass=org.apache.kafka.common.serialization.StringSerializer
          -Dkafka.sender.defaultValueSerializerClass=org.apache.kafka.common.serialization.StringSerializer
          -Dkafka.defaultKeyDeserializerClass=org.apache.kafka.common.serialization.StringDeserializer
          -Dkafka.defaultValueDeserializerClass=org.apache.kafka.common.serialization.StringDeserializer

  lint:
    runs-on: ubuntu-latest
    container:
      image: openjdk:17
    steps:
      - uses: actions/checkout@v4
      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Lint
        env:
          GH_PACKAGES_PAT: ${{ secrets.GH_PACKAGES_PAT }}
        run: ./mvnw $MAVEN_CLI_OPTS spotless:check