# SPDX-License-Identifier: Apache-2.0
# Â© Crown Copyright 2025. This work has been developed by the National Digital Twin Programme
# and is legally attributed to the Department for Business and Trade (UK) as the governing entity.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: AWS ECR Test Release

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: Tag for the docker image, this will be suffixed with `-SNAPSHOT`
        required: true
        type: string
      dry_run:
        description: |
          Dry run.
          Toggle for whether to push images or not.
          If toggled then the built images will not be pushed.
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  # Make sure that the current code runs
  verify:
    runs-on: ubuntu-latest
    outputs:
      project_version: ${{ steps.get-version.outputs.project_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java/Maven
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven
          server-password: 'GH_PACKAGES_PAT'
      - name: Get Version
        id: get-version
        run: echo project_version=$(./mvnw $MAVEN_CLI_OPTS help:evaluate -Dexpression=project.version -q -DforceStdout) >> $GITHUB_OUTPUT
      - name: Build packages
        env:
          MAVEN_CLI_OPTS: "--batch-mode --no-transfer-progress"
          GH_PACKAGES_PAT: ${{ secrets.GH_PACKAGES_PAT }}
        run: ./mvnw $MAVEN_CLI_OPTS package
      - uses: actions/upload-artifact@v4
        name: Persist server
        id: persist-server
        with:
          name: federator-server-${{ steps.get-version.outputs.project_version }}.jar
          path: target/federator-server-${{ steps.get-version.outputs.project_version }}.jar
          retention-days: 1
      - uses: actions/upload-artifact@v4
        name: Persist client
        with:
          name: federator-client-${{ steps.get-version.outputs.project_version }}.jar
          path: target/federator-client-${{ steps.get-version.outputs.project_version }}.jar
          retention-days: 1

  release-ecr-tag:
    name: Build and release docker images to ECR with tag ${{ inputs.image_tag }}-SNAPSHOT
    needs: verify
    uses: ./.github/workflows/docker-ecr.yml
    with:
      image_tag: '${{ inputs.image_tag }}-SNAPSHOT'
      jar_version: ${{ needs.verify.outputs.project_version }}
      dry_run: ${{ inputs.dry_run }}
      docker_target: federator
    secrets: inherit

  release-ecr-tag-msk:
    name: Build and release docker images to ECR with tag ${{ inputs.image_tag }}-SNAPSHOT-msk
    needs: verify
    uses: ./.github/workflows/docker-ecr.yml
    with:
      image_tag: '${{ inputs.image_tag }}-SNAPSHOT-msk'
      jar_version: ${{ needs.verify.outputs.project_version }}
      dry_run: ${{ inputs.dry_run }}
      docker_target: federator-msk
    secrets: inherit

  cleanup:
    name: Artifact cleanup
    runs-on: ubuntu-latest
    needs:
      - release-ecr-tag
      - release-ecr-tag-msk
      - verify
    if: ${{ needs.verify.result == 'success' }}
    steps:
      - uses: geekyeggo/delete-artifact@v5
        name: Delete server artifact
        with:
          name: federator-server-${{ needs.verify.outputs.project_version }}.jar
      - uses: geekyeggo/delete-artifact@v5
        name: Delete client artifact
        with:
          name: federator-client-${{ needs.verify.outputs.project_version }}.jar
